# SCREENSHOT EXAMPLE: http://grab.by/bzg3
##############################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  <
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################

############################################################################
############################################################################
# Reset Prefix
############################################################################
set -g prefix C-a
bind-key a send-prefix # for nested tmux sessions

############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 10000
set-option -g status-position top
# colors
setw -g mode-bg black
set-option -g default-terminal "screen-256color" #"xterm-256color" # "screen-256color"
set-option -g pane-active-border-fg green
# set-option -g pane-border-fg colour235 #base02
# set-option -g pane-active-border-fg colour240 #base01

# utf8 support
set-window-option -g utf8 on


# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
# set-window-option -g window-status-current-fg white
# set-window-option -g window-status-current-bg reverse

# Automatically set window title
setw -g automatic-rename

# use mouse # More on mouse support http://floriancrouzat.net/2010/07/run-tmux-with-mouse-support-in-mac-os-x-terminal-app/
# setw -g mode-mouse on
#setw -g mouse-resize-pane on
#set -g mouse-select-window on
# set -g mouse-select-pane on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# vi movement keys
# set-option -g status-keys vi

############################################################################
# Status Bar
############################################################################
set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 2
set-option -g status-left-length 50
set-option -g status-left "#[fg=yellow,bold]# #S » "
# set-option -g status-left "#[fg=yellow,bold]# #S » #[fg=colour231,bold]#h@#{pane_current_path}"
set-option -g status-right-length 80
set-option -g status-right "#[fg=green,bg=black]#(tmux-mem-cpu-load --colors --interval 2)#[default] #[fg=cyan]» #[fg=yellow]%R #[fg=magenta]%d-%m-%Y#(acpi | cut -d ',' -f 3)#[default]"
set-option -g visual-activity on

# Titles (window number, program name, active (or not)
set-option -g set-titles on
# set-option -g status-style bg=colour244
# set-option -ag set-titles-string '#{=10:pane_title}#W'
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange


# clock
# set-window-option -g clock-mode-colour colour64 #green

############################################################################
# Unbindings
############################################################################
#unbind [ # copy mode bound to escape key
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split


############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf

#bind Escape copy-mode

# new split in current pane (horizontal / vertical)
bind-key - split-window -v # split pane horizontally
bind-key \ split-window -h # split pane vertically

# list panes
bind-key Space list-panes

# break-pane
bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
#bind C-j command-prompt "joinp"
#bind C-j command-prompt "join-pane"
#bind-key j command-prompt "join-pane -s '%%'"
#bind-key j command-prompt "joinp -t:0"
bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

#previous pane
bind-key -n C-up prev
bind-key -n C-left prev

#next pane
bind-key -n C-right next
bind-key -n C-down next

############################################################################
# windows
############################################################################
set-window-option -g window-status-current-format "#I:#W"
set-window-option -g window-status-current-style fg=magenta,bold,underscore
# set-window-option -ag window-status-current-style bg=blue
set-window-option -g window-status-format "#I:#W"
set-window-option -g window-status-separator " | "

bind C-j previous-window
bind C-k next-window
bind-key C-a last-window # C-a C-a for last active window
bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resizing ---------------------------------------------------------------
bind-key C-h resize-pane -L
bind-key C-j resize-pane -D
bind-key C-k resize-pane -U
bind-key C-l resize-pane -R

# use vim motion keys while in copy mode
setw -g mode-keys vi

############################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window

new -s Harad -n code
neww -n models
neww -n controllers
neww -n api
neww -n sql

new -s Platzi -n code
neww -n models
neww -n controllers
neww -n api
neww -n sql
# focus on first window
# select-window -t 0

new -s Psi -n code
neww -n models
neww -n controllers
neww -n api
neww -n sql
select-window -t 0

new -s Phoenix -n code
neww -n models
neww -n controllers
neww -n api
neww -n sql
select-window -t 0
